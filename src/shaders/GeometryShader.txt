#version 330 core
layout (points) in;
layout (triangle_strip, max_vertices = 4) out;

uniform float resolution;

in vec2 geometryTexPoisiton[];
out vec2 fragmentTexPosition;

void draw_ray(vec4 position)
{   
    float x = position.x;
    float height = position.y;

    gl_Position = vec4(x - resolution, -height, 0.0, 1.0);    // 1:bottom-left
    fragmentTexPosition = geometryTexPoisiton[0] + vec2(0.001, 0.0);;
    EmitVertex();
    gl_Position = vec4(x + resolution, -height, 0.0, 1.0);    // 2:bottom-right
    fragmentTexPosition = geometryTexPoisiton[0] + vec2(resolution / 2.0, 0.0);;
    EmitVertex();
    gl_Position = vec4(x - resolution, height, 0.0, 1.0);    // 3:top-left
    fragmentTexPosition = geometryTexPoisiton[0]  + vec2(0.001, 1.0);;
    EmitVertex();
    gl_Position = vec4(x + resolution, height, 0.0, 1.0);    // 4:top-right
    fragmentTexPosition = geometryTexPoisiton[0] + vec2(resolution / 2.0, 1.0);
    EmitVertex();
    EndPrimitive();
}

void main() {    
    draw_ray(gl_in[0].gl_Position);
}